import com.vanniktech.maven.publish.SonatypeHost

plugins {
    id "org.springframework.boot" version "2.7.18"
    id 'java'
    id "com.vanniktech.maven.publish" version "0.30.0"
    id "io.spring.dependency-management" version "1.1.7"
    id "com.diffplug.spotless" version "5.17.1"
    id 'signing'
    id 'jacoco'
}

ext {
    GROUP_ID = 'io.github.bestheroz'
    ARTIFACT_ID = 'mybatis-repository'
    VERSION = '0.5.1'
    DESCRIPTION = "MyBatis Repository's Interface"
    GITHUB_URL = "https://github.com/bestheroz/mybatis-repository"
}

group = GROUP_ID
version = VERSION
description = DESCRIPTION

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter:2.7.18'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.0.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

mavenPublishing {
    publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL)

    signAllPublications()

    coordinates(GROUP_ID, ARTIFACT_ID, VERSION)

    pom {
        name.set(ARTIFACT_ID)
        description.set(DESCRIPTION)
        url.set(GITHUB_URL)
        inceptionYear.set("2025")

        licenses {
            license {
                name.set("The Apache License, Version 2.0")
                url.set("http://www.apache.org/licenses/LICENSE-2.0.txt")
                distribution.set("http://www.apache.org/licenses/LICENSE-2.0.txt")
            }
        }

        developers {
            developer {
                id.set("bestheroz")
                name.set("joony.kim")
                url.set("https://github.com/bestheroz")
            }
        }

        scm {
            url.set(GITHUB_URL)
            connection.set("scm:git:git://${GITHUB_URL}.git")
            developerConnection.set("scm:git:ssh://git@github.com:bestheroz/${ARTIFACT_ID}.git")
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

spotless {
    java {
        importOrder()
        googleJavaFormat("1.7")
    }
}

signing {
    useInMemoryPgpKeys(System.getenv("GPG_PRIVATE_KEY"), System.getenv("SIGNING_PASSWORD"))
    sign(publishing.publications)
}

jacoco {
    toolVersion = "0.8.12"
}

jacocoTestReport {
    reports {
        csv.required = true
    }
}

test {
    finalizedBy jacocoTestReport
}
